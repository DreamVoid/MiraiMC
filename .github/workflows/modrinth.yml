name: Upload MiraiMC Release Assets to Modrinth

on:
  release:
    types: [published]

jobs:
  upload-mirai-to-modrinth:
    runs-on: ubuntu-latest
    steps:
      - name: Download release assets (using gh cli)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          mkdir -p release-assets
          gh release view "$GITHUB_REF_NAME" --json assets -q '.assets[].name' | grep -E 'MiraiMC-(Bukkit|Bungee|Sponge|Velocity)\.jar' | while read filename; do
            echo "Downloading $filename"
            gh release download "$GITHUB_REF_NAME" -p "$filename" -D release-assets
          done
          echo "Downloaded files:"
          ls -lh release-assets/

      - name: Get current version info and calculate next version
        id: version
        run: |
          curl -s https://api.miraimc.dreamvoid.me/version.json > version.json
          LATEST_UNSTABLE=$(jq -r '.["latest-unstable"]' version.json)
          VERSION_NUM=$(jq --arg v "$LATEST_UNSTABLE" -r '.versions[$v]' version.json)
          NEXT_VERSION_NUM=$((VERSION_NUM + 1))
          echo "next_version_num=$NEXT_VERSION_NUM" >> $GITHUB_OUTPUT

      - name: Get all Minecraft versions from Modrinth (include all, no dash filtering)
        id: mc_versions
        run: |
          curl -s 'https://api.modrinth.com/v2/tag/game_version' > mc_versions.json
          jq -r '[.[] | select(.version | test("^[1-9][0-9]*\\.[0-9]+")) | .version] | map(select(. >= "1.0"))' mc_versions.json | jq -c . > filtered_mc_versions.json
          echo "Filtered game versions:"
          cat filtered_mc_versions.json
          echo "game_versions=$(cat filtered_mc_versions.json)" >> $GITHUB_OUTPUT

      - name: Set up Java (for upload tool if needed)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 重点修正：多行 changelog 用环境变量传递
      - name: Upload each asset to Modrinth
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          MODRINTH_PROJECT_ID: ${{ secrets.MODRINTH_PROJECT_ID }}
          CHANGELOG: ${{ github.event.release.body }}
        run: |
          set -e
          shopt -s nullglob

          changelog="$CHANGELOG"
          next_version_num="${{ steps.version.outputs.next_version_num }}"
          gh_title="${{ github.event.release.name }}"
          lower_title="$(echo "$gh_title" | tr '[:upper:]' '[:lower:]')"
          if echo "$lower_title" | grep -q "pre"; then
            release_type="alpha"
          elif echo "$lower_title" | grep -q "rc"; then
            release_type="beta"
          else
            release_type="release"
          fi

          game_versions="$(cat filtered_mc_versions.json)"

          for file in release-assets/*; do
            filename=$(basename "$file")
            case "$filename" in
              MiraiMC-Bukkit.jar)
                variant="Bukkit"
                loaders='["Bukkit","Folia","Paper","Purpur","Spigot"]'
                ;;
              MiraiMC-Bungee.jar)
                variant="Bungee"
                loaders='["BungeeCord","Waterfall"]'
                ;;
              MiraiMC-Sponge.jar)
                variant="Sponge"
                loaders='["Sponge"]'
                ;;
              MiraiMC-Velocity.jar)
                variant="Velocity"
                loaders='["Velocity"]'
                ;;
              *)
                echo "Skip $filename"
                continue
                ;;
            esac

            version_number="${next_version_num}-${variant}"

            echo "Uploading $filename as $version_number to Modrinth, channel: $release_type ..."

            curl -X POST "https://api.modrinth.com/v2/version" \
              -H "Authorization: $MODRINTH_TOKEN" \
              -F "project_id=$MODRINTH_PROJECT_ID" \
              -F "version_number=$version_number" \
              -F "name=$version_number" \
              -F "version_type=$release_type" \
              -F "changelog=$changelog" \
              -F "files=@$file" \
              -F "game_versions=$game_versions" \
              -F "loaders=$loaders" \
              --fail

            if [ $? -ne 0 ]; then
              echo "Failed to upload $filename to Modrinth"
              exit 1
            fi
          done

      - name: Clean up assets
        run: rm -rf release-assets version.json mc_versions.json filtered_mc_versions.json
